{
  "swagger": "2.0",
  "info": {
    "description": "This is an API contract for NextDeal",
    "version": "1.0.0",
    "title": "Swagger API docs for NextDeal",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "pasala.kk@gmail.com"
    },
    "license": {
      "name": "Apache 3.1",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "service.nextdeal.cl",
  "basePath": "/",
  "tags": [
    {
      "name": "Buyer",
      "description": "Everything about your buyer"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/v1/buyers/register": {
      "post": {
        "tags": [
          "Buyers"
        ],
        "summary": "Create a new buyer to system",
        "operationId": "addBuyer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Buyer object that needs to be added to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Buyer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/201"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BuyerResponse"
                        },
                        {
                          "$ref": "#/definitions/CommonResponseData"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "409": {
            "description": "Conflict--> Account exists already",
            "schema": {
              "$ref": "#/definitions/409"
            }
          },
          "422": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/422"
            }
          },
          "500": {
            "description": "Interbal server error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/v1/buyers/{buyerId}": {
      "get": {
        "tags": [
          "Buyers"
        ],
        "summary": "Get buyer from the system",
        "operationId": "getBuyer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "buyerId",
            "type": "integer",
            "required": true,
            "description": "Numeric ID of the Buyer to get"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/200"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/BuyerResponse"
                        },
                        {
                          "$ref": "#/definitions/CommonResponseData"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/404"
            }
          }
        }
      }
    },
    "/v1/buyers/{buyerId}/projects": {
      "post": {
        "tags": [
          "Buyers"
        ],
        "summary": "Create a new project for a Buyer.",
        "operationId": "createProject",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "buyerId",
            "type": "integer",
            "required": true,
            "description": "Numeric ID of the Buyer for which a project is being create."
          },
          {
            "in": "body",
            "name": "body",
            "description": "Buyer object that needs to be added to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/200"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ProjectResponse"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/404"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Buyers"
        ],
        "summary": "Get all projects for a specific Buyer.",
        "operationId": "getAllProjects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "buyerId",
            "type": "integer",
            "required": true,
            "description": "Numeric ID of the Buyer for which a project is being create."
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/200"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ProjectResponse"
                        },
                        {
                          "$ref": "#/definitions/CommonResponseData"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/404"
            }
          }
        }
      }
    },
    "/v1/suppliers/register": {
      "post": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Add a new supplier to system                 ",
        "description": "",
        "operationId": "addSupplier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Supplier object that needs to be added to the system",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/Supplier"
                },
                {
                  "properties": {
                    "categories": {
                      "type": "array",
                      "$ref": "#/definitions/CategoryRequest"
                    },
                    "serviceLocations": {
                      "type": "array",
                      "$ref": "#/definitions/ServiceLocationRequest"
                    }
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/201"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SupplierResponse"
                        },
                        {
                          "$ref": "#/definitions/CommonResponseData"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "409": {
            "description": "Conflict--> Account exists already",
            "schema": {
              "$ref": "#/definitions/409"
            }
          },
          "422": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/422"
            }
          },
          "500": {
            "description": "Interbal server error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/v1/suppliers/{supplierId}": {
      "get": {
        "tags": [
          "Suppliers"
        ],
        "summary": "Get supplier from the system",
        "operationId": "getsupplier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "supplierId",
            "type": "integer",
            "required": true,
            "description": "ID of the supplier to get"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/200"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/SupplierResponse"
                        },
                        {
                          "$ref": "#/definitions/CommonResponseData"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/404"
            }
          }
        }
      }
    },
    "/v1/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a new user to a buyer subdomain",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User object that needs to be added to the system",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/201"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/UserResponse"
                        },
                        {
                          "$ref": "#/definitions/CommonResponseData"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "409": {
            "description": "Conflict--> Account exists already",
            "schema": {
              "$ref": "#/definitions/409"
            }
          },
          "422": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/422"
            }
          },
          "500": {
            "description": "Interbal server error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/v1/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login user to a specific buyer subdomain",
        "operationId": "loginUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User login with credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/200"
                },
                {
                  "properties": {
                    "jwt": {
                      "type": "string"
                    },
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/UserResponse"
                        },
                        {
                          "$ref": "#/definitions/CommonResponseData"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "409": {
            "description": "Conflict--> Account exists already",
            "schema": {
              "$ref": "#/definitions/409"
            }
          },
          "422": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/422"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/v1/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a specific user profile based on JWT token",
        "operationId": "getUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/200"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/UserResponse"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/404"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/v1/users/profile/{profileId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a specific user profile",
        "operationId": "getUserProfileById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "profileId",
            "type": "integer",
            "required": true,
            "description": "ID of the user to get"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/200"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/UserResponse"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/404"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/config/countries/{countryCode}/regions": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Fetch regions by country code",
        "operationId": "fetchRegions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "countryCode",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/200"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/RegionsResponse"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "409": {
            "description": "Conflict--> Account exists already",
            "schema": {
              "$ref": "#/definitions/409"
            }
          },
          "422": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/422"
            }
          },
          "500": {
            "description": "Interbal server error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/config/countries/{countryCode}/regions/{regionId}/comunas": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Fetch comunas by country code and region id",
        "operationId": "fetchComunas",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "countryCode",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "regionId",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/200"
                },
                {
                  "properties": {
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/definitions/ComunasResponse"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "409": {
            "description": "Conflict--> Account exists already",
            "schema": {
              "$ref": "#/definitions/409"
            }
          },
          "422": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/422"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/v1/files": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Upload public files",
        "operationId": "uploadFiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The file to be uploaded along with other related data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/200"
                },
                {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/FileResponse"
                      }
                    }
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409"
            }
          },
          "422": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/422"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/v1/secureFiles": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Upload private files securely",
        "operationId": "uploadSecureFiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The files to be uploaded along with other related data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FileRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/200"
                },
                {
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/FileResponse"
                      }
                    }
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/409"
            }
          },
          "422": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/422"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "200": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TraceId"
        }
      ],
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "example": 200
        },
        "message": {
          "type": "string"
        }
      }
    },
    "201": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TraceId"
        }
      ],
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "example": 201
        },
        "message": {
          "type": "string"
        }
      }
    },
    "400": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TraceId"
        }
      ],
      "description": "Bad request",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "example": 400
        },
        "message": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "403": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TraceId"
        }
      ],
      "description": "Forbidden",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "example": 403
        },
        "message": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "404": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TraceId"
        }
      ],
      "description": "Not found",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "example": 404
        },
        "message": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "409": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TraceId"
        }
      ],
      "description": "Conflict",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "example": 409
        },
        "message": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "422": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TraceId"
        }
      ],
      "description": "Invalid input",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "example": 405
        },
        "errorCode": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "fieldName": {
                "type": "string"
              },
              "error": {
                "type": "string"
              },
              "display": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "500": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TraceId"
        }
      ],
      "description": "Internal server error",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "example": 500
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Buyer": {
      "type": "object",
      "description": "Buyer Info",
      "required": [
        "legalName",
        "rut",
        "fantasyName",
        "subDomainName"
      ],
      "properties": {
        "businessAddress": {
          "$ref": "#/definitions/ContactInfo"
        },
        "legalName": {
          "type": "string"
        },
        "fantasyName": {
          "type": "string"
        },
        "subDomainName": {
          "type": "string"
        },
        "rut": {
          "type": "string"
        },
        "webSiteUrl": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "additionalData": {
          "type": "string"
        }
      }
    },
    "Supplier": {
      "type": "object",
      "description": "Buyer Info",
      "required": [
        "contactinfo",
        "legalName",
        "fantasyName",
        "rut",
        "emailId",
        "categories",
        "isShared",
        "contactInfo"
      ],
      "properties": {
        "contactInfo": {
          "$ref": "#/definitions/ContactInfo"
        },
        "billingAddress": {
          "$ref": "#/definitions/ContactInfo"
        },
        "legalName": {
          "type": "string"
        },
        "fantasyName": {
          "type": "string"
        },
        "rut": {
          "type": "string"
        },
        "webSiteUrl": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "logoUrl": {
          "type": "string"
        },
        "isShared": {
          "type": "boolean"
        },
        "inchargeFullName": {
          "type": "string"
        },
        "inchargeRole": {
          "type": "string"
        },
        "inchargeContactInfo": {
          "$ref": "#/definitions/ContactInfo"
        },
        "categories": {
          "$ref": "#/definitions/CategoryRequest"
        }
      }
    },
    "BuyerResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/Id"
        },
        {
          "$ref": "#/definitions/Buyer"
        },
        {
          "$ref": "#/definitions/CommonResponseData"
        },
        {
          "properties": {
            "status": {
              "type": "string"
            },
            "licencedUntil": {
              "type": "string"
            }
          }
        }
      ]
    },
    "SupplierResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/Id"
        },
        {
          "$ref": "#/definitions/Supplier"
        },
        {
          "$ref": "#/definitions/CreatedBy"
        },
        {
          "$ref": "#/definitions/CommonResponseData"
        },
        {
          "properties": {
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CategoryResponse"
              }
            },
            "serviceLocations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceLocationResponse"
              }
            },
            "status": {
              "type": "string"
            },
            "licencedUntil": {
              "type": "string"
            }
          }
        }
      ]
    },
    "RegionsResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/Id"
        },
        {
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "code": {
              "type": "string"
            },
            "regions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Region"
              }
            }
          }
        }
      ]
    },
    "ComunasResponse": {
      "allOf": [
        {
          "properties": {
            "comunas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comuna"
              }
            }
          }
        }
      ]
    },
    "Id": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "TraceId": {
      "type": "object",
      "properties": {
        "traceId": {
          "type": "string"
        }
      }
    },
    "CreatedBy": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        }
      }
    },
    "ContactInfo": {
      "type": "object",
      "description": "Contact Info",
      "required": [
        "addressLine1",
        "addressLine2",
        "communeId",
        "regionId",
        "countryId",
        "emailId",
        "phoneNumber1"
      ],
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "communeId": {
          "type": "integer"
        },
        "regionId": {
          "type": "integer"
        },
        "countryId": {
          "type": "integer"
        },
        "emailId": {
          "type": "string"
        },
        "phoneNumber1": {
          "type": "string"
        },
        "phoneNumber2": {
          "type": "string"
        }
      }
    },
    "CategoryRequest": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "CategoryResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ServiceLocationRequest": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ServiceLocationResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "description": "User Info",
      "required": [
        "firstName",
        "lastName",
        "emailId",
        "password"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "contactInfo": {
          "$ref": "#/definitions/ContactInfo"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "description": "User Info",
      "allOf": [
        {
          "$ref": "#/definitions/CommonResponseData"
        }
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "emailId": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "contactInfo": {
          "$ref": "#/definitions/ContactInfo"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "description": "User Info",
      "required": [
        "emailId",
        "password"
      ],
      "properties": {
        "emailId": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Region": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "ordinal": {
          "type": "string"
        },
        "orderNum": {
          "type": "string"
        },
        "countryId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Comuna": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "regionId": {
          "type": "string"
        }
      }
    },
    "ProjectRequest": {
      "type": "object",
      "description": "Project Request Body",
      "required": [
        "name",
        "managerName",
        "startDate",
        "expectedEndDate",
        "costCenter",
        "estimatedBudget",
        "currency",
        "description"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "managerName": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
          "example": "2021-10-24T20:59:28.367Z"
        },
        "expectedEndDate": {
          "type": "string",
          "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
          "example": "2021-10-24T20:59:28.367Z"
        },
        "costCenter": {
          "type": "string"
        },
        "estimatedBudget": {
          "type": "integer"
        },
        "currency": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ProjectResponse": {
      "type": "object",
      "description": "Project Response.",
      "required": [
        "name",
        "managerName",
        "startDate",
        "expectedEndDate",
        "costCenter",
        "estimatedBudget",
        "currency",
        "description"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/Id"
        },
        {
          "$ref": "#/definitions/ProjectRequest"
        },
        {
          "$ref": "#/definitions/CreatedBy"
        },
        {
          "$ref": "#/definitions/CommonResponseData"
        }
      ],
      "properties": {
        "status": {
          "type": "string"
        }
      }
    },
    "FileRequest": {
      "type": "object",
      "description": "File info",
      "required": [
        "assets",
        "assetRelationId",
        "assetRelationType"
      ],
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "assetRelationId": {
          "type": "integer"
        },
        "assetRelationType": {
          "type": "string"
        }
      }
    },
    "FileResponse": {
      "type": "object",
      "properties": {
        "fileUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        }
      }
    },
    "CommonResponseData": {
      "type": "object",
      "description": "Common response data for all the API response objects.",
      "required": [
        "createdAt",
        "updatedAt"
      ],
      "properties": {
        "createdAt": {
          "type": "string",
          "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
          "example": "2021-10-24T20:59:28.367Z"
        },
        "updatedAt": {
          "type": "string",
          "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
          "example": "2021-10-24T20:59:28.367Z"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}